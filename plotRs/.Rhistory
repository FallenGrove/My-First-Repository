#import data from chamber matlab file
rsIn = readData('chamData.mat')
#find the average of each chamber for 5 years
master = list()
i = 1
while(i<5)
{
master[i] = getRsAvg(rsIn,i)
i = i+1
}
rsIn = readData('chamData.mat')
readData <-function(name)
{
data <- readMat(name)
return(data)
}
#gets the list within the imported list
dataIn <- data[[1]]
rm(master,i,readData)
source("findAvg.R")
source("readFiles.R")
source("findAvg.R")
source("readFiles.R")
#import data from chamber matlab file
rsIn = readData('chamData.mat')
#find the average of each chamber for 5 years
master = list()
i = 1
while(i<5)
{
master[i] = getRsAvg(rsIn,i)
i = i+1
}
#plot a time series of the data
plot(rs_2014)
#import data from chamber matlab file
rsIn = readData('chamData.mat')
rsIn = readFiles('chamData.mat')
devtools::document()
#import data from chamber matlab file
rsIn = readFiles('chamData.mat')
source("findAvg.R")
source("readFiles.R")
#import data from chamber matlab file
rsIn = readFiles('chamData.mat')
#import data from chamber matlab file
rsIn = readFiles('chamData.mat')
source("findAvg.R")
source("findAvg.R")
source("readFiles.R")
devtools::document()
rsIn = readFiles('chamData.mat')
source("findAvg.R")
source("readFiles.R")
#import data from chamber matlab file
rsIn = readFiles('chamData.mat')
#plot a time series of the data
plot(rs_2014)
source(findAvg.R)
source("findAvg.R")
source('findAvg.R')
function(name)
{
data <- readMat(name)
return(data)
}
function(data,idx)
k
devtools::document()
rsIn = readFiles('chamData.mat')
rsIn = readFiles('chamData.mat')
readFiles('chamData.mat')
rsIn = readFiles('chamData.mat')
devtools::document()
devtools::document()
rsIn = readFiles('chamData.mat')
rsIn = readFiles('chamData.mat')
rsIn = readFiles('chamData.mat')
.libPaths()
readFiles('chamData.mat')
mysummary <- function(x,npar=TRUE,print=TRUE) {
if (!npar) {
center <- mean(x); spread <- sd(x)
} else {
center <- median(x); spread <- mad(x)
}
if (print & !npar) {
cat("Mean=", center, "\n", "SD=", spread, "\n")
} else if (print & npar) {
cat("Median=", center, "\n", "MAD=", spread, "\n")
}
result <- list(center=center,spread=spread)
return(result)
}
get.seed(1234)
rm(mysummary)
readFiles <- function(name)
{
data <- readMat(name)
return(data)
}
findAvg <- function(data,idx)
{
#gets the list within the imported list
dataIn <- data[[1]]
#get the year of the data
data_idx <- dataIn[[idx]]
#gets number of rows of the matrix and adds a NaN column
data_idx = cbind(data_idx, c(replicate(dim(data_idx)[1],NaN)))
#for loop to get the average of that row
for(i in 1:dim(data_idx)[1])
{
#omits any NaN
data_idx[i,4] = mean(na.omit(data_idx[i,]))
}
return(data_idx[,4])
}
source("findAvg.R")
source("readFiles.R")
rsIn = readFiles('chamData.mat')
library(R.matlab)
readFiles <- function(name)
{
library(R.matlab)
data <- readMat(name)
return(data)
}
rsIn = readFiles('chamData.mat')
#find the average of each chamber for 5 years
master = list()
i = 1
while(i<5)
{
master[i] = findAvg(rsIn,i)
i = i+1
}
#plot a time series of the data
plot(rs_2014)
master = list()
while(i<5)
{
master[i] = findAvg(rsIn,i)
i = i+1
}
master[1] = findAvg(rsIn,1)
rs_2014 = findAvg(rsIn, 1)
master = list()
while(i<5)
{
master[i] = append(master, findAvg(rsIn,i))
i = i+1
}
i = 1
while(i<5)
{
master = append(master[i], findAvg(rsIn,i))
i = i+1
}
master = list()
i = 1
while(i<5)
{
master = master.append(findAvg(rsIn,i))
i = i+1
}
while(i<5)
{
master = append(master, findAvg(rsIn,i))
i = i+1
}
plot(master)
View(master)
master = list()
i = 1
#findAvg(rsIn,i)
while(i<5)
{
master = append(master[i], findAvg(rsIn,i))
i = i+1
}
View(master)
master = list()
i = 1
#
while(i<5)
{
master[i] = findAvg(rsIn,i)
i = i+1
}
master = list(5)
i = 1
#
while(i<5)
{
master[i] = findAvg(rsIn,i)
i = i+1
}
master = list()
master[1] = c(1,2,3,34)
master[2] = c(1,2,3,38)
master = list()
i = 1
while(i<5)
{
master[[i]] = findAvg(rsIn,i)
i = i+1
}
View(master)
master = list()
i = 1
while(i<6)
{
master[[i]] = findAvg(rsIn,i)
i = i+1
}
View(master)
rem(rs_2014)
rm(rs_2014)
par(mfcol = c(5,1))
plot(master[[1]])
plot(master[1])
plot(master[[1]])
View(master)
master[[1]]
plot(master[[1]])
plot(findAvg(rsIn,1))
plot(findAvg(rsIn,1))
plot(master[[1]])
par("mar")
par(mar = c(1,1,1,1))
plot(master[[1]])
for (i in 1:5)
{
plot(master[i])
}
for (i in 1:5)
{
plot(master[[i]])
}
#changing the margins of the data
par(mar = c(1,1,1,1))
par(mfrow=c(5,1))
for (i in 1:5)
{
plot(master[[i]])
}
devtools::document()
devtools::document()
devtools::document()
rm(readFiles)
readData <- function(name)
{
library(R.matlab)
data <- readMat(name)
return(data)
}
devtools::document()
readData <- function(name)
{
library(R.matlab)
data <- readMat(name)
return(data)
}
findAvg <- function(data,idx)
{
#gets the list within the imported list
dataIn <- data[[1]]
#get the year of the data
data_idx <- dataIn[[idx]]
#gets number of rows of the matrix and adds a NaN column
data_idx = cbind(data_idx, c(replicate(dim(data_idx)[1],NaN)))
#for loop to get the average of that row
for(i in 1:dim(data_idx)[1])
{
#omits any NaN
data_idx[i,4] = mean(na.omit(data_idx[i,]))
}
return(data_idx[,4])
}
#import data from chamber matlab file
rsIn = readData('chamData.mat')
#find the average of each chamber for 5 years
master = list()
i = 1
while(i<6)
{
master[[i]] = findAvg(rsIn,i)
i = i+1
}
#plot a time series of the data
#changing the margins of the data
par(mar = c(1,1,1,1))
par(mfrow=c(5,1))
for (i in 1:5)
{
plot(master[[i]])
}
library(askpass)
library(assertthat)
detach("package:askpass", unload = TRUE)
detach("package:assertthat", unload = TRUE)
install.packages(c("backports", "digest", "hms", "pkgconfig", "rlang", "rmarkdown", "tinytex", "xfun"))
